// Mock data for testing without backend
// To enable: set USE_MOCK_DATA = true
// To disable: set USE_MOCK_DATA = false or delete this file

import { Note, Topic } from './types';

export const USE_MOCK_DATA = true; // Set to true to use mock data

// Mock Topics
export const mockTopics: Topic[] = [
  {
    id: 'topic-1',
    name: 'Работа',
    parentId: null,
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 30,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 30,
  },
  {
    id: 'topic-2',
    name: 'Backend',
    parentId: 'topic-1',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 25,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 25,
  },
  {
    id: 'topic-3',
    name: 'Python',
    parentId: 'topic-2',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 20,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 20,
  },
  {
    id: 'topic-4',
    name: 'FastAPI',
    parentId: 'topic-3',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 15,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 15,
  },
  {
    id: 'topic-5',
    name: 'Frontend',
    parentId: 'topic-1',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 24,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 24,
  },
  {
    id: 'topic-6',
    name: 'React',
    parentId: 'topic-5',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 18,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 18,
  },
  {
    id: 'topic-7',
    name: 'TypeScript',
    parentId: 'topic-5',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 17,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 17,
  },
  {
    id: 'topic-8',
    name: 'Личное',
    parentId: null,
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 28,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 28,
  },
  {
    id: 'topic-9',
    name: 'Книги',
    parentId: 'topic-8',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 22,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 22,
  },
  {
    id: 'topic-10',
    name: 'Спорт',
    parentId: 'topic-8',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 21,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 21,
  },
  {
    id: 'topic-11',
    name: 'DevOps',
    parentId: 'topic-1',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 23,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 23,
  },
  {
    id: 'topic-12',
    name: 'Docker',
    parentId: 'topic-11',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 16,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 16,
  },
  {
    id: 'topic-13',
    name: 'Kubernetes',
    parentId: 'topic-11',
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 14,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 14,
  },
];

// Mock Notes
export const mockNotes: Note[] = [
  {
    id: 'note-1',
    title: 'FastAPI основы',
    text: 'FastAPI - современный фреймворк для создания API на Python. Основные преимущества:\n- Автоматическая валидация данных через Pydantic\n- Встроенная документация (Swagger UI)\n- Async/await поддержка из коробки\n- Высокая производительность',
    url: 'https://fastapi.tiangolo.com/',
    imageUrl: undefined,
    topicId: 'topic-4',
    isFavorite: true,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 5,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 2,
  },
  {
    id: 'note-2',
    title: 'React хуки - основные правила',
    text: '1. Вызывайте хуки только на верхнем уровне\n2. Вызывайте хуки только из React функций\n3. useState для состояния компонента\n4. useEffect для побочных эффектов\n5. useCallback и useMemo для оптимизации',
    url: 'https://react.dev/reference/react',
    topicId: 'topic-6',
    isFavorite: false,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 8,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 3,
  },
  {
    id: 'note-3',
    title: 'TypeScript utility types',
    text: 'Полезные встроенные типы:\n- Partial<T> - делает все поля опциональными\n- Required<T> - делает все поля обязательными\n- Pick<T, K> - выбирает определенные поля\n- Omit<T, K> - исключает определенные поля\n- Record<K, V> - создает объект с ключами K и значениями V',
    topicId: 'topic-7',
    isFavorite: true,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 6,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 1,
  },
  {
    id: 'note-4',
    title: 'Docker Compose шпаргалка',
    text: 'Основные команды:\n```\ndocker-compose up -d  # запустить в фоне\ndocker-compose down   # остановить и удалить\ndocker-compose logs -f # смотреть логи\ndocker-compose ps     # список контейнеров\ndocker-compose exec service_name bash # войти в контейнер\n```',
    url: 'https://docs.docker.com/compose/',
    topicId: 'topic-12',
    isFavorite: false,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 10,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 4,
  },
  {
    id: 'note-5',
    title: 'Книга: Clean Code',
    text: 'Robert Martin - "Clean Code: A Handbook of Agile Software Craftsmanship"\n\nКлючевые идеи:\n- Осмысленные имена переменных\n- Функции должны делать одно дело\n- Комментарии - признак плохого кода\n- Правило бойскаута: оставь код чище, чем нашел',
    topicId: 'topic-9',
    isFavorite: true,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 12,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 7,
  },
  {
    id: 'note-6',
    title: 'План тренировок',
    text: 'Понедельник: Грудь + трицепс\nСреда: Спина + бицепс\nПятница: Ноги + плечи\n\nКардио: 20 минут после тренировки\nРастяжка: обязательно в конце',
    topicId: 'topic-10',
    isFavorite: false,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 3,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 1,
  },
  {
    id: 'note-7',
    title: 'Kubernetes основы',
    text: 'Основные объекты:\n- Pod - минимальная единица развертывания\n- Deployment - управление репликами подов\n- Service - сетевой доступ к подам\n- Ingress - внешний доступ\n- ConfigMap/Secret - конфигурация',
    url: 'https://kubernetes.io/docs/',
    topicId: 'topic-13',
    isFavorite: false,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 9,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 5,
  },
  {
    id: 'note-8',
    title: 'Python async/await',
    text: 'Асинхронное программирование в Python:\n```python\nasync def fetch_data():\n    async with aiohttp.ClientSession() as session:\n        async with session.get(url) as response:\n            return await response.json()\n\n# Запуск\nawait fetch_data()\n# или\nasyncio.run(fetch_data())\n```',
    topicId: 'topic-3',
    isFavorite: true,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 7,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 2,
  },
  {
    id: 'note-9',
    title: 'React Context API',
    text: 'Использование Context для глобального состояния:\n\n```typescript\nconst ThemeContext = React.createContext();\n\nfunction App() {\n  return (\n    <ThemeContext.Provider value="dark">\n      <Component />\n    </ThemeContext.Provider>\n  );\n}\n\nfunction Component() {\n  const theme = React.useContext(ThemeContext);\n  return <div>{theme}</div>;\n}\n```',
    topicId: 'topic-6',
    isFavorite: false,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 4,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 1,
  },
  {
    id: 'note-10',
    title: 'Книга: Atomic Habits',
    text: 'James Clear - "Atomic Habits"\n\nГлавные принципы:\n1. Делай это очевидным\n2. Делай это привлекательным\n3. Делай это легким\n4. Делай это удовлетворяющим\n\nМаленькие изменения → большие результаты',
    topicId: 'topic-9',
    isFavorite: true,
    attachments: [],
    createdAt: Date.now() - 1000 * 60 * 60 * 24 * 11,
    updatedAt: Date.now() - 1000 * 60 * 60 * 24 * 6,
  },
];

